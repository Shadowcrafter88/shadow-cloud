version: '3.5'

services:
  backend:
    depends_on:
      - frontend
      - db
      - adminer
    container_name: ${COMPOSE_PROJECT_NAME}-backend
    build:
      dockerfile: ./backend/Dockerfile_backend
    hostname: backend
    image: ${COMPOSE_PROJECT_NAME}:${COMPOSE_PROJECT_NAME}-backend
    restart: on-failure
    volumes:
      - ./frontend/dist:/usr/src/app/dist
    ports:
      - 3000:3000
    expose:
      - "3000"

  frontend:
    container_name: ${COMPOSE_PROJECT_NAME}-frontend
    hostname: frontend
    image: ${COMPOSE_PROJECT_NAME}:${COMPOSE_PROJECT_NAME}-frontend
    volumes:
      - ./frontend/dist:/usr/src/app/dist
    build:
      dockerfile: ./frontend/Dockerfile_frontend
  
  db:
    image: postgres:15.4-alpine3.18
    restart: always
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Persist database data
    ports:
      - 5433:5432
    expose:
      - "5433"

  adminer:
    image: adminer
    restart: always
    container_name: ${COMPOSE_PROJECT_NAME}-adminer
    ports:
      - 3002:8080
    expose:
      - "3002"

volumes:
  postgres-data:
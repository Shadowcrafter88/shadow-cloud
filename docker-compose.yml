version: '3.5'

services:
  backend:
    depends_on:
      - frontend
      - db
      - adminer
    environment:
      COMPOSE_PROJECT_NAME: "shadow-share"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "shadow-share"
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"
      JWT_SECRET: "P@Qr#Vt!As*rDH6#NPL*m2u!ZEG#JWn5QgZC32q2aawGt2mzU5wMg^adHbGTaB322jRB!8LZDF4AUV8P8r7&NMMSr5Sr#s*E*CTK" 
    container_name: ${COMPOSE_PROJECT_NAME}-backend
    build:
      dockerfile: ./backend/Dockerfile_backend
    hostname: backend
    image: ${COMPOSE_PROJECT_NAME}:${COMPOSE_PROJECT_NAME}-backend
    restart: on-failure
    volumes:
      - ./backend/uploads:/usr/src/app/uploads
      - ./frontend/dist:/usr/src/app/dist
    ports:
      - 3000:3000
    expose:
      - "3000"

  frontend:
    container_name: ${COMPOSE_PROJECT_NAME}-frontend
    hostname: frontend
    image: ${COMPOSE_PROJECT_NAME}:${COMPOSE_PROJECT_NAME}-frontend
    volumes:
      - ./frontend/dist:/usr/src/app/dist
    build:
      dockerfile: ./frontend/Dockerfile_frontend
  
  db:
    image: postgres:15.4-alpine3.18
    restart: always
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    expose:
      - "5432" # Expose port 5432 to be used in development

  adminer:
    image: adminer
    restart: always
    container_name: ${COMPOSE_PROJECT_NAME}-adminer
    ports:
      - 3002:8080
    expose:
      - "3002"

volumes:
  postgres-data: